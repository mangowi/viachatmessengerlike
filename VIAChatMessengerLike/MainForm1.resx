<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAABGdBTUEAALGPC/xhBQAAGElJREFUeF7t
        nT+oPUmVxycwmMBgggkmMPgFG0ywwQQGBgYOiGwgwwQiw7AMsoiIiAwisogIsiyyyCKLLCIGExiITDAs
        E4gYGBgYGBhOYGBgYGhgYKifT+05PXXvu/e9/t/V9/aB8/revtVVp059+3yrqqvrPffqq69+CnmD49vP
        HdKk0DZfQF+3reJU+xLA+jbHX6Cv8Pml+OmQjYX2eMk2Qd+jXf6d4+6A9Q7Hv6PeGa/ET4dsLLZFtIlt
        YxvtC1hhtMb/HZC9x/EL8fMhG4ltEG2R7bJrYP0e/XVU6GX0xUh2yEqCzzv6q3T3Ecuj4PKzncWXI9kh
        Kwk+7+gv2SM+7xdY8f21+P4X9Afo0edaSfC1IMoI1fV34/v+gBV3QwLrZb6/hhq5rKTgMjx/tFxwyOwS
        /j2nP7+XETrHfVNhnCrCd4e4gsvI1VXykPkl/JujP0F1MniK8zcDrBfQr6EJroMWFxB8epH+aonf9ges
        mgpT+P48+klUcP2RNO9z/F6c/0gkO2Sk4MNH6a8Wzt1OxFI4J4iMXEatD9A/xvfnI8khIwUfPkp/tUSa
        24hYtfBbTYuqn1+Inw8ZKPjuSfqrJdLdTsRK4TcjlwD8Jkej1s9QwXXQ4gDBV/WzP7sW5fms5yPJReH3
        poGFXR9BxYJ1eYa+UID1VMRSTBwX2ZEXXEaugxYHCL6q6U9Q9VpREulbBlZ2maybgepZb2ClkE7nOEIU
        YL9G34qfDnlE8FNNf/r7tfjpSamuaQJY2PECmPkEx6yT/W9t/NBO/8SXvsAynH8OFVxm+EO0t5PuTfBN
        PfrzOayRftDjMtJuBizKzGhkHT6Nfh51duBH1MUukfoun+ub5v+BhfQGlkLadJZR67foO/HTIWcSfkr6
        E1SDfRXXbgWs7AJZh/9CE0B/Aze2v3Z9F806jgdWCtfotB95LWoeR+SqBH+Mpr9aqusXBxZlCKJ/Qd9G
        fw82/szRh+BdEEEvRlzTxe/DqbAWrnmJAr/IUed5N0qPdw8u/YJOor9auG4RYJFf0pz9Je37EmobvoPN
        2u4AwxHsz1BnBP4NdZHCxSVVnDsFFjIKWArXTQ71tyZz+yTyWQJYSXNGJ/PXVsuqac4l0a/HJY9KXDsP
        sFK4vg77fr7L54pnftCvkyN4ldckYHH9aJrrI+YVeUyjwlq43rtUg3Wq6ue7ARd1nZX+aiGPwcAi7UdR
        bRJIjuSS5n6COpJLipP2nqS5PsJ1p8Ayc0/G76OFPGoK0MF3s3b+rO6zdgkiz6HASqALJtsiac7o5AS3
        5wXbbPRKXqfAii+TgZUS+WVFbp4WrSM3p42Xjp11AFPlexUE/CaI3kIFjMARQF7nZzvhnjfNYuvqyHtx
        YLkC1YoILh3uyPHmFgpaJ9TGqumv0EkkmUXI9wRYHJPmPoO+ye8+t80JS0H0i/jsOX97EzWt1yy2EvjE
        Tv/El9mApZBfWTsfhTnXdXNRyzqhi9BfLZF/Daya5gSSUck0Nc0ZvVb1OeUtD6wU8wZcjjis9KKheE2h
        HovSXy1Rho/PLG8TmusjlL8qsBwZ+TzxAxpCB/iccbfg0nZ0cfqrxaiPCiIf+juSc2T3A46r0Vwf0U5s
        WAdYCnm/RaE65S8cy90VP+1OtB1dnP5qibKcc7I8p3GcQngWPzcj2LQ6sPLRgZNyGcqdrNvVKlTsXY3+
        aqnKm21qYAk5sdM/8WVJYOUKQ0O3oVxwOSln2c0vFMTG1emvFsrbBbBO7PRPfFkMWCmUYdQSXDaM6ufm
        oxY2rk5/tUS5zQPrxE7/xJfFgaVQTkeLlfq9yciFXZvQXy1V2QewrgnlJC1+xwZDpUUjl+8wNgMubNmU
        /mo5oZiG5cRO/8SXVYCVQnnuHugI0Y68jdYULWofuhn91RI2NA+sEzv9E19WBZZCmRkVnIaw8d6LnzYV
        7Nic/mqp7DiA1UcoszzzisiVm5DMstRkjKQ92oJuSn+1YMcugHVip3/iy+rASqHsmha1pdeKxbmFcjOC
        6qBN6a+WsKd5YJ3Y6Z/4shmwFMp3gdnroj4ixeqNSplO2uoPHfSdOL25hD0HsMYI5b+ICq6ahrRttUcX
        lhVlCu5NgYUNjpyNnq7+/Bv6v36Pn5sUgwI2tgWsFOxwJGZ/SyN9X221u5SymolYlO/bxi590Rd2EXxJ
        tLnng7VgX7vAUrClDPUDXEawVZY4U87mwKLcegLZfckElf5ofkUINjYPrOxEuxLSXVkE1+LOJf9NqZBy
        BdUnKftrqKDKtVb6o/k9YLG3bWClYJNLRASXBkuRi/YxyH/TiEWZ0l95lsrRSLWrJUbYegIsh/r1a/Kb
        DPWvifZoV4BrUVok702ARVm7pb9asPcEWIbZZl+Tx5achtC2X3H0JYFFqIE8V6dCyuroj6N1tB12Q3+1
        UIcPgaXwwbujiedi10SbMHzRtfPkuXrEopyO/lQBzXGXK2yx+xRYKZwQXP9XJWgmcinaE3YJrv9BZ20A
        8lstYlFGDlCsiys8BFazy4f6yIOIlcIJ+1tvo4UWObZIi4LLhnDEJLhmowzyKcAKBy0GrLA5N6+zTyW9
        G7Wkxd3u6Yrtl4GlcHIPtKhduXZ+Nlokn1UiVtgsqLTfujS1ZGisxA15GVgp/FhmwNFM3FLkkjKyX+KS
        G/slkxuGPBYFFvl29Ef+N0F/tfQFlg74Kvpz1E7z99EmwIUdz1OJ8l8zbCDUFzQmUwnXLkaF5FfTny+f
        /nQOm1sS6vE0sBQSlKE+asgu+yfFT5sLttRzP6mT7n6uXSxikWdHf+TtQ3Z3etk9/dUSN+TTwEohYd0n
        8MJmJlGxxeG6VFj6K3we3V/hutmBRV76zm5FczfnXEKdvKGfjQFWHcabo0X0s6ivnHe0GD8PEvKYlQrJ
        Q1DlZnRN+W2MYHuyhPXyBnSE7o3sjS023GLyx+gn4pKnhYvqjmdrtPigUxw/DRKumzVikU+zA6Axgv0l
        MqHWSzA5aV1G5xyto1FZgA2fX/QiMsm+gv2a0dQzt2gbWlP2oIYk/SzA4nrtaHrK5jHB3rxRjbb605tD
        nxqREkDWy/OmsR8+bbKaDHz5oZvcQ5uZ3KP8SZRN2slUyHXZIDpd52tLk5EKu/JlFrfjzr1K3frAfxTg
        wgQXGVqP1J/G+W9y/sscP++1qIO86XOJZoJ21INOHpHNJbVt6CDKJu3kiMW1u6E/bFs/MvURC8EADWqR
        Fgc3MGlGAyuucym15VluMxv7YkvWS/tKJEI7AKEGB7eZ0k/rAeiaUHjLtHhOSf+JPjpa4fdRVEhaR0ff
        i8bJu3v1hqHM7FwLIpcauWY+R2yCRtveRW0ntWzghjrRbFr3jp2P2qaIBqCt0qJ2ZSfalaiP/n9A0oyK
        WKS30ay35VjeJnc75XaRCfsdsTkRq03W5zwyaadpm35BozQiRu+BFq82POcHAYt0uYzHfM1/7Zc+bgdA
        1wTDW6fFb6F25q9SFedKg9k4HB8FFr+fbzk+K/2Rl36TDaSlMmKjPB8D1dT2c84lrTkxbP/J18Q6akOt
        u/Xa7+MjjG+ZFt0A1ga5Gl041ztikWZR+iM/H1XpSzvS2q3NPrLqIpPf47y/26cy/X4B9JRQuY4W0dZo
        sQaEjdZt+MHnR4HFeW8S53rMw7oZIfo9F7siXH8AqK9Q6ZZpUXrQLhtLgPwrWkZAHC9SIZ/LZnGcl2Ic
        SUmp5vEG2qvvQrocsQkKo2f+46Tyb3DRpDOPLlXqqI2j6SxLSiwjNvQm1nANlqi8TvTOFlw2ZCu0mJ1u
        bRMghcY4XoxYfPeG0HYjiXXxOuvWe0hO2sxb2rTMB5EJtROuXc433W9k6iM4xuUUPiYQWGpLtFgaF02g
        +GjjBFh8rt+iOQHiJeG3GkCCxNGZYExaKwCK38reFOg+R2xbCk6zYXReNo4ObYIWMcuRUz6hFzDfQN/g
        uwBwQrXQH0dpKdNI8UbjmtocIfpPEkxrGusoaMuzNjXOubTHvVdNa5+qgAo9otIYwXEdlVS6OS1qAw1c
        RyNB4LSBwLLvc5X+OB6RqRXBsTZUNqQNJkVu6mzKv9R/Ehj5L0b87DGjkB33AiDUfasKIFGjUZnLQrd9
        HHJvgsO7lyBQG9LnVkYGqWWT18kptx7xFcpDjTZ/5fyf4/Of+JyTq/msLScjvTkc4Tlis4+2WV3uWnB6
        TYsPKGYrofyaFjs6Cz0i016ERqlp0Uab/ZX5oUL52W+qweRnj94E2V+yX3V0ulsUGqWmRRtt9lfmhwrl
        FmBFtPoVKs1JeQJK+jNipTr6c4Sn/U54SoNOXm4+2r17iUZohhYpt4tYACbnsbTHyUr3tHACMzvudSQT
        ZALMKQTrc5+z4q1JNMbmtEiZD4B1TSKdlOjSlXPA5YjyANyWosNpmM1pkbJqKnwKWKY1mpneiVZHleWV
        KLSmzRxF+szv65FWUHrtMa+1tODkzWmRsnpHrGsS1/sGi9HKuhi9SiQjz1yAlwOASSsjDhkgOHszWqSc
        ycA6F/LKG0Y6tF4ngKMcQXcAbmnBqZvRIvn3psK+Qj75/xkdMTpydAT5JcpwxOkE6/m7ey6ZkU6XeXfv
        ngUHbkKL5D97xLomlJF1NEJde13d+gs2J2SNeJvO892M4Egd710rTSxOi+S9GrCuCWVbZ+3oBTjO+Sjp
        GAT0ERyVz++kAJ37W47OhP8GXYwWyXN2KhwqlJuRrIw4URcl2i3IlyjOqVPaLNManBeMt/ECxRKCQ2qa
        cObbO9TGzscsi9AieW4esa4JNmUkkxYLwFB9celt5jIAQI9IhhPScTotqU+HCSqd5Qsa0qKfF6FF8msW
        WNcEW43e3mh9AecA4rYjGRXM/1HospOvozrGUaD6S9RR01dQw7sO/LifcZTU6MSj4PL6FyPLSUI+BVjI
        ZlQ4VLDz2o4x/40KpnPq9GWQ235BIyrkczgr7Iav5Q7j6D8xcE7HKPagspzTYa6P8s50tDTL/2wmn91F
        rGtS1eXi29IccwDgzbzvFzc0HLWyjmZyGsFKWmmjU++9TUmbb9p4vQ6a/Ho7edwMsK5JVcc+gDNdm/00
        DOsoDDUE/wTVcOnOjbysgM/PPo32jjymRc1TR9iHMM9JnXqu3R0VDhXqlX1ZQWOk0vfe1Pluo35M9ca1
        fcoLIBxlhwI2dNvohgF1p9sGy5GdBtsfmHRHcL355qjRzunoDj3X3nzEuiTU98m3sVEjm77e7sUQCi3T
        BBiSDZ7LSPx3vLOPSshvFlrkursE1jXBD+eAcyuo8k5A+KgAjs9Gu3mXa5NRzjk5uvB9OUckNu77fNYQ
        G/w/UEchFvwxdNbRB/nNQoukv3kqHCL4wLa1K6N/bd830XyQbrvqZ7V+wcQtC6ZHMzIpnE1jWNil+afV
        wmaUN5oWSX9ErB5S+Ukf5wAgI1lp80g6TLgwMxatZZoANWO/X50mWEMot9BiVFJ7etMiaY+INUHw2TBg
        kdCQaFSyf2QodBRhBo7sbDyXenjeCTcBZ/pNXiig3NG0SJouYqEHsAaKfgMjg4DVzT+hRqZu/gkdNP+0
        lmBTocWIPr1okTRHxJog+OzpiMWP3uV2uE3okg3BpPrdOY02J84qwcZBtGid0ANYIwWfXQYWJwRTGd2h
        9vDfxcl2zOzx/xB1oszGMl3z0//YWGjROnBM2r5Ki5w/qHCC6Dd8fRFYUkaO7nRu2UvU8xx3+1Qcu/MV
        Let0lRY5f0SsCYLPPoxY/PEOFkzZb1p9mmANoS7W0xvEOl6kReuLHsAaKfjsBFhGImfJfdQiwFyJKN3p
        5H0+7b4g1CXXLQmq1BNa5PNBhRNEv4GdDlg60i8686bAdEmon1ToGiXre0KLfD4i1gTBZycRqwNW/H7z
        Ql1rWiw7IMf5A1gTBJ/dPbBqWnRXGcEl/TsiPqhwpOg3bsr7BVYKda5pUR/49OCIWCMFn913xKqFene0
        iJblPQewxokYQg9gKdS7o0UA9TuOuYmHS32ObYcGiH7DhwewaqH+HS1GxPIZ6E2PkOcWMYQewFKod64B
        d7mPj33yVfYEmBPGrt7YbknuTgTf3DewqGuuenUkWFZEAqLyLqPH+PwHVEdJjY4acxcY/zP++Rbcm60/
        a0nwwX1TIXXNKGW9s7PuIy0BZWRyeZAAK1ELrTv1+TKIUxU+qTDtzU8s9xF8cH8Ri/qVyU9UQHwQgPEB
        u3W/9NywnkTN56eZR+mPoZ7vdoGp8jOi+QLCXUUy6nofwKJO5RV+GtxlQLk/qFHpfVRgSIMC4MFqB87l
        aNH/VuE1vtZvPtKf590QzdfaBJFLjHxH0jzVbt9RtN539J/Red5iaVCo231QIXVyPZYvZboMqCz2j89S
        WK+18F6P6p9c5Pha/NQJ5wSay7LL8hyOWZZ3sJ89J8WaZtALHnsS6na7EYt6JIWVV/ijcY0iRpZ+a7HP
        hOsyegkuO/LvxE8Xhd9zcCAoLddVrLU95iONape0ahvsfrRJHW4HWNhtI/5T1KOM8FDno4wS0pHfHcG5
        r+moxuO6sqMLal7SXNKiWwc86ENxrt531HJz9Hlp8zSp1h1gPF/2HEXdp9RrZ9lFZy3B3tuhQuw2Mtjv
        kYbqqGCUsPFniwTkZdQSAJbhilTfCeg9GjQt6gDgwV5WqI2SUczfjHaz7KKzllgHdL/AwlYbR8fbb7Fh
        Uv3u+cVohbxrWhTIgmHS6I9rc7SZ0cw8baSigpijizHnfY19Zgl79wUs7Mt9BKQVG0CbbQRHbO5gI81Y
        FylksTkl8u5oMcoWXNKclDcKXFyXkSz/u72UWHbm4ZiU6UjW8n6M+hzTMvWFddYvm73LmUL5+6NC7NPx
        UluxFc2IYZSSCledoKS8jhZRI4wNPZsN5kUjOatv515ar6NY1l1feEOZZlLUnEMofx8RK2xzVOUdWztU
        R24+bMeG2WnxmpCnADIiuGldatkzwfOh/kdYbTCaGvVGjYLHStjQJrCww/20jEAZnXy3UQpwhPd9PhsZ
        muhnYMPstHhNyL8ACy37hvLdrcrzP+f7m/5xxJrU6Xf9541Z9hv1Go6OoBeJ7uTbLhVih9FIirHDqqE2
        lp+bHSVh16K0qJBfAsv2ejA44Zz+sVxBrg25rswRrN/tj9r596ZdZHAT5bUDLMou/Qg0w7o72HjXXXRi
        i4Kdi9Ii+TwKrHMhTQ4I9K3X6l9tK1MbaD4R8Lyg1PZJNwPXbwcsysnJQ+r1KTfp8p8RCSKpxIp657s1
        d9lGEl21Uz5WsDNp0eeDUlJGrlloER8NBVbO/gsYr3EEKS1qnyNLd6auadPnnY5E7YIINK+xPr3/Awhp
        t6NCyskKO5pzaYp3kQ6zIbRjN2C6JGG/DWh9ElyT60Meg4B1Tbg2I6v+d7RZuhyp8d128HfT9e7Len1c
        uw6wyDvDcuk7CaYAlFHKCuwaTOdCXfLmcQ1XAszvoyMX184CrEtCfhnZjFS2UQ5ELK9ef2a0k1ovthfn
        lgcW+aVz3e2ldCpRDS5LVjjnzjUaafmTnN6aUJeke7cr0LcCTGB8Fh01mo3rlwKWthrJnFx2krbbazTs
        T8rM5UC25bdQpzQ+QxpHm167PBWSn2AR2cWx5o96F2iYo5ObAtMliTraQNbfu94GGTX/xnWLAeuaWA7q
        1IbtlY+asuvSzZmh1tFot0zEIg8NMT95OkOpR/PvvRfoLQn17mgR1Rc2zKC+i0L61YF1TcIG2cYH/9Yr
        pzbmAxbXZWfQybrSIUQFlqHTzmGi+WYXuD0m1LujRdRoLbi8yz+H9gYXfmwJWAYQ21xbchWt/a+cK3tl
        DmBZgOito5SfdcSqjxRaFnwxiRZJ2wywzgV7Mipnn/nZKGCRNsFUb3RrHjruANMVwTejaZE0zQLrooSh
        jwKL33RIrtI07LkfqVRnZHIFpKMHJ+AcHbRf6Y0E31yiRf/n4pO02BIV9pIw9ClgeZflKk3noPKxgNfN
        ukrzHgR/ndPik/8tlt9vA1gaD4ByhUFOaKp20Fdf/3Rrgv8KLeLXXrTI+f0CC/VfwH4czVWa0lyO8HyW
        ZOVMLy3e9BzU0oL/6klUV4r69s9VWiTNroHlHZP/NMDvRirvJoeQpjui1MyiT1EfuBdmQC/SIud2DawC
        JlQwOeq7y7mnrQR/2w5Grge0yOddAstRnVMHVsylE3Ysew2DD5lP8LddEHezEVwubfkiWm7uvVKhRtuX
        2ofRNyz4X3Alg9i3LY/COO4LWIe0KYCnfjPHbokgO4B1yDQBPGVkHuASVPkPRw9gHTJNAFBNi6kHsA6Z
        RwBSTYsHsA6ZRwBSTYsHsA6ZTwJc0uIOgPXcc/8AmmjRbZo5VWMAAAAASUVORK5CYII=
</value>
  </data>
</root>